<UserControl x:Class="YoutubeViewers.WPF.Components.YoutubeViewersListingItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:YoutubeViewers.WPF.Components"
             xmlns:custom="clr-namespace:DropdownMenuControl;assembly=DropdownMenuControl"
             xmlns:loadingspinner="clr-namespace:LoadingSpinnerControl;assembly=LoadingSpinnerControl"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid Margin="0 12 0 12">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <TextBlock Text="{Binding Username}" />

            <!--Para mudar a Visibility do Collapsed dependendo do HasErrorMessage:
            https://stackoverflow.com/questions/30172392/how-to-do-a-simple-xaml-wpf-conditional-binding-on-the-visibility-property
            Para adicionar StaticResource dentro do .Style da Tag:
            https://stackoverflow.com/questions/29552102/how-to-apply-staticresource-using-textbox-style-->
            <TextBlock Text="{Binding ErrorMessage}">
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource ErrorMessage}"
                           TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize"
                                Value="12" />
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasErrorMessage}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>



        <!--Aqui o Grid para os 3 pontos do Dropdown e também do SpinnigLoader do Delete-->
        <Grid Grid.Column="1"
              Margin="10 0 0 0">

            <Grid VerticalAlignment="Center">
                <!--O Grid.Style é o que define a renderização condicional da Grid-->
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDeleting}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <!--Aqui usamos o LoadingSpinner (pacote do SingletonSean)-->
                <loadingspinner:LoadingSpinner Diameter="15"
                                               IsLoading="True" />
            </Grid>

            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDeleting}"
                                         Value="False">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>


                <custom:DropdownMenu x:Name="dropdown"
                                     Cursor="Hand">
                    <Border Background="White"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="3">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Background"
                                            Value="White" />
                                    <Setter Property="Padding"
                                            Value="20 10" />
                                    <Setter Property="Cursor"
                                            Value="Hand" />
                                    <Setter Property="VerticalAlignment"
                                            Value="Center" />
                                    <Setter Property="HorizontalAlignment"
                                            Value="Stretch" />
                                    <Setter Property="TextBlock.TextAlignment"
                                            Value="Center" />
                                    <EventSetter Event="Click"
                                                 Handler="Button_Click" />

                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Margin="{TemplateBinding Margin}"
                                                        Padding="{TemplateBinding Padding}"
                                                        Background="{TemplateBinding Background}">
                                                    <ContentPresenter />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                        To="DarkGray"
                                                                        Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
                                                                        To="White"
                                                                        Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Resources>
                            <Button Command="{Binding EditCommand}"
                                    Content="Edit" />
                            <Button Command="{Binding DeleteCommand}"
                                    Content="Delete" />
                        </StackPanel>
                    </Border>
                </custom:DropdownMenu>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
